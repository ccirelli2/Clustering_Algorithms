plot(p.x, p.y)
plot(p.x, p.y)
# Create DataFrame with X & Y Values
df.pxy = data.frame(p.x, p.y)
plot(df.pxy)
head(df.pxy)
n.centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
centroids(2)
c.1 <- centroids(2)
# Plot Data Cloud + Centroids
p.1 <- ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point(data=c1, aes(x=x, y=y))
# Plot Data Cloud + Centroids
p.1 <- ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point(data=c.1, aes(x=x, y=y))
p.1
# Plot Data Cloud + Centroids
p.1 <- ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point() + geom_point(data=c.1, aes(x=x, y=y))
p.1
# Plot Data Cloud + Centroids
p.1 <- ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point() + geom_point(data=c.1, aes(x=x, y=y), colour='red', size=2)
p.1
# Plot Data Cloud + Centroids
p.1 <- ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point() + geom_point(data=c.1, aes(x=x, y=y), colour='red', size=5)
p.1
k.means <- function(df.pxy, centroids, plot.data){
'df.pxy:           Randomly generated dataset
num.centroids:    Number of centroids'
# Generate Centroids
df.centroids <- n.centroids(num.centroids)
# Plot Data Cloud + Centroids
if (plot.data == TRUE){
ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point() + geom_point(data=c.1, aes(x=x, y=y), colour='red', size=5)}
return(df.centroids)
}
test.1 <- k.means(df.pxy, 2, TRUE)
k.means <- function(df.pxy, num.centroids, plot.data){
'df.pxy:           Randomly generated dataset
num.centroids:    Number of centroids'
# Generate Centroids
df.centroids <- centroids(num.centroids)
# Plot Data Cloud + Centroids
if (plot.data == TRUE){
ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point() + geom_point(data=c.1, aes(x=x, y=y), colour='red', size=5)}
return(df.centroids)
}
test.1 <- k.means(df.pxy, 2, TRUE)
test.1
k.means <- function(df.pxy, num.centroids, plot.data){
'df.pxy:           Randomly generated dataset
num.centroids:    Number of centroids'
# Generate Centroids
df.centroids <- centroids(num.centroids)
# Plot Data Cloud + Centroids
if (plot.data == TRUE){
p.1 <- ggplot(data=df.pxy, aes(x=p.x,y=p.y)) + geom_point() + geom_point(data=c.1, aes(x=x, y=y), colour='red', size=5)}
print(p.1)
return(df.centroids)
}
test.1 <- k.means(df.pxy, 2, TRUE)
df.pxy
df.pxy[1]
c.1 <- centroids(2)
df.pxy[1] / c.1
df.pxy[1] / c.1[1]
c.1[1]
c.1[1,1]
df.pxy[1] / c.1[1,1]
length(c.1[1])
length(c.1[,1])
print(i)
for (i in length(c.1[,1]){
print(i)
}
for (i in length(c.1[,1])){
print(i)
}
count <- 0
for (i in length(c.1[,1])){
print(count+1)
}
c.1 <- centroids(2)
count <- 0
for (i in length(c.1[,1])){
print(count+1)
}
for (i in length(c.1[,1])){
print(i)
}
for (i in seq(1,length(c.1[,1]))){
print(i)
}
for (i in seq(1,length(c.1[,1]))){
count = count+1
}
count
count <- 0
for (i in seq(1,length(c.1[,1]))){
count = count+1
print(count)
}
count
is.numeric(count)
test <- as.character(count)
is.character(test)
print(count+count)
test <- as.character(count)
print(test + test)
print(paste(test,test))
print(paste(test.test))
c.1 <- centroids(2)
c.1
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.count <- paste('x.',c.count, sep='')
y.count <- paste('y.',c.count, sep='')
df.pxy$x.count <- (df.pxy$p.x - c.1$x[i])^2
df.pxy$y.count <- (df.pxy$p.y - c.1$y[i])^2
print(head(df.pxy))
}
print(c.count)
x.count
x.count
df.pxy$x.count <- (df.pxy$p.x - c.1$x[i])^2
df.pxy
head(df.pxy)
df.pxy$$x.count <- (df.pxy$p.x - c.1$x[i])^2
df.pxy$[i+2] <- x.count
df.pxy[i+2] <- x.count
head(df.pxy)
df.pxy[i+2] <- as.character(x.count)
head(df.pxy)
x.count
df.pxy[i+2] <- as.character(x.count)
x.count
head(df.pxy)
df.pxy[i+2] <- 'x.1'
x.count
head(df.pxy)
df.pxy[i+2,] <- 'x.1'
x.count
head(df.pxy)
df.pxy[,i+2] <- 'x.1'
x.count
head(df.pxy)
names(df.pxy)[i+2] <- 'x.1'
head(df.pxy)
# Clear Namespace
rm(list=ls())
# Import Libraries
library(ggplot2)
set.seed(7)
p.x = runif(100, min = 0, max = 10)
p.y = runif(100, min = 0, max = 10)
plot(p.x, p.y)
df.pxy = data.frame(p.x, p.y)
plot(df.pxy)
head(df.pxy)
centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
c.1 <- centroids(2)
x.count
test <- 'x.1'
names(test)
name(test)
names(test) <- 'x.1'
test
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
names(x.count) <- paste('x.',c.count, sep='')
names(y.count) <- paste('y.',c.count, sep='')
df.pxy$x.count <- (df.pxy$p.x - c.1$x[i])^2
head(df.pxy)
#names(df.pxy)[i+2] <- x.count
#head(df.pxy)
#df.pxy$y.count <- (df.pxy$p.y - c.1$y[i])^2
#print(head(df.pxy))
}
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.count <- ''
y.count <- ''
names(x.count) <- paste('x.',c.count, sep='')
names(y.count) <- paste('y.',c.count, sep='')
x.count
print(x.count)
x.count
print('hello world')
print('hello world')
c.1
head(df.pxy)
x.count
names(x.count) <- 'test'
x.count <- ''
names(x.count) <- 'test'
names(x.count)
df.pxy$names(x.count) <- c.1$x
test <- names(x.count) <- 'test'
df.pxy$test <- c.1$x
head(df.pxy)
df.pxy$x.count <- c.1$x
head(df.pxy)
df.pxy$names(test) <- c.1$x
x.count <- ''
test <- names(x.count) <- 'test'
df.pxy$test <- c.1$x
head(df.pxy)
?setNames
?setNames(object = test, 'shit')
test
names(test)
setNames(object = test, 'shit')
names(test)
test
setnames(object = test, 'shit')
head(df.pxy)
colnames(df[3]) <- 'Shit'
colnames(df.pxy)[3] <- 'Shit'
head(df.pxy)
colnames(df.pxy)[3] <- test
head(df.pxy)
test <- 'balls'
colnames(df.pxy)[3] <- test
head(df.pxy)
# Clear Namespace
rm(list=ls())
library(ggplot2)
# Step 1:  Generate A Random Dataset
set.seed(7)
p.x = runif(100, min = 0, max = 10)
p.y = runif(100, min = 0, max = 10)
plot(p.x, p.y)
# Create DataFrame with X & Y Values
df.pxy = data.frame(p.x, p.y)
plot(df.pxy)
head(df.pxy)
centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
c.1 <- centroids(2)
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.',c.count, sep='')
y.n <- paste('y.',c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2; colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2; colnames(df.pxy)[i+2] <- y.n
head(df.pxy)
}
print('hello world')
head(df.pxy)
names(x.n)
rm(list=ls())
# Import Libraries
library(ggplot2)
# Step 1:  Generate A Random Dataset
set.seed(7)
p.x = runif(100, min = 0, max = 10)
p.y = runif(100, min = 0, max = 10)
plot(p.x, p.y)
# Create DataFrame with X & Y Values
df.pxy = data.frame(p.x, p.y)
plot(df.pxy)
head(df.pxy)
# Centroids Generation Function
centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
c.1 <- centroids(2)
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.',c.count, sep='')
y.n <- paste('y.',c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2
colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2
colnames(df.pxy)[i+2] <- y.n
print(head(df.pxy))
}
names(x.n) <- 'shit'
colnames(df.pxy)[i+2] <- x.n
print(head(df.pxy))
# Clear Namespace
rm(list=ls())
# Import Libraries
library(ggplot2)
# Step 1:  Generate A Random Dataset
set.seed(7)
p.x = runif(100, min = 0, max = 10)
p.y = runif(100, min = 0, max = 10)
plot(p.x, p.y)
# Create DataFrame with X & Y Values
df.pxy = data.frame(p.x, p.y)
plot(df.pxy)
head(df.pxy)
# Centroids Generation Function
centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
c.1 <- centroids(1)
c.1
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.', c.count, sep='')
y.n <- paste('y.', c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2
colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2
colnames(df.pxy)[i+2] <- y.n
print(head(df.pxy))
print(head(df.pxy))
# Iterate Centroids X & Y Columns - Calculate Dist 4 Each - Add to DF
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.', c.count, sep='')
y.n <- paste('y.', c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2
colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2
colnames(df.pxy)[i+2] <- y.n
print(head(df.pxy))
}
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.', c.count, sep='')
y.n <- paste('y.', c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2
colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2
colnames(df.pxy)[i+2] <- y.n
print(head(df.pxy))
}
print('hello')
# Clear Namespace
rm(list=ls())
# Import Libraries
library(ggplot2)
# Step 1:  Generate A Random Dataset
set.seed(7)
p.x = runif(100, min = 0, max = 10)
p.y = runif(100, min = 0, max = 10)
plot(p.x, p.y)
# Create DataFrame with X & Y Values
df.pxy = data.frame(p.x, p.y)
plot(df.pxy)
head(df.pxy)
# Centroids Generation Function
centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
c.1 <- centroids(1)
c.1
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.', c.count, sep='')
y.n <- paste('y.', c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2
colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2
colnames(df.pxy)[i+2] <- y.n
print(head(df.pxy))
}
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.', c.count, sep='')
y.n <- paste('y.', c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2
colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2
colnames(df.pxy)[i+3] <- y.n
print(head(df.pxy))
}
# Clear Namespace
rm(list=ls())
# Import Libraries
library(ggplot2)
# Step 1:  Generate A Random Dataset
set.seed(7)
p.x = runif(100, min = 0, max = 10)
p.y = runif(100, min = 0, max = 10)
plot(p.x, p.y)
# Create DataFrame with X & Y Values
df.pxy = data.frame(p.x, p.y)
plot(df.pxy)
head(df.pxy)
# Centroids Generation Function
centroids <- function(num){
# Set Seed
set.seed(7)
# Create Vectors to Capture X & Y Values
x <- c()
y <- c()
# For Loop - Generate N-Centroids
for (i in seq(1, num)){
x <- c(x, runif(1, min = 0, max = 10))
y <- c(y, runif(1, min = 0, max = 10))
}
# Create Dataframe
df <- data.frame(x,y)
return(df)
}
c.1 <- centroids(1)
c.1
# Iterate Centroids X & Y Columns - Calculate Dist 4 Each - Add to DF
for (i in seq(1,length(c.1[,1]))){
# Create Column Names For Each X/Y Pair For Each Centroid
c.count <- as.character(i)
x.n <- paste('x.', c.count, sep='')
y.n <- paste('y.', c.count, sep='')
df.pxy$x.n <- (df.pxy$p.x - c.1$x[i])^2
colnames(df.pxy)[i+2] <- x.n
df.pxy$y.n <- (df.pxy$p.y - c.1$y[i])^2
colnames(df.pxy)[i+3] <- y.n
print(head(df.pxy))
}
